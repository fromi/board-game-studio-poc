@import "variables";

.not-alone.setup {
  $board-scale-factor: $board-ratio / 3;
  $board-translate-x: calc((50vw - #{$board-width / 2}));
  $scale-delta-top: $board-height / 2 - $board-height / 2;

  .board:not(.chosen) {
    will-change: transform, opacity;

    &.board-1 {
      transform: translate($board-translate-x, $scale-delta-top + $board-width / 9 + $header-height) scale($board-scale-factor);
    }
    &.board-2 {
      transform: translate($board-translate-x, $scale-delta-top + $board-width * 5 / 9 + $header-height) scale($board-scale-factor);
    }
  }

  &.board-side-choice {
    > *:not(.information):not(.board) {
      display: none;
      opacity: 0;
    }

    &.creature .board {
      transition: all 0.3s ease-in-out;
      cursor: pointer;

      &:hover {
        &.board-1 {
          transform: translate($board-translate-x, $scale-delta-top + $board-width / 9 + $header-height) scale($board-scale-factor * 1.05);
        }
        &.board-2 {
          transform: translate($board-translate-x, $scale-delta-top + $board-width * 5 / 9 + $header-height) scale($board-scale-factor * 1.05);
        }
        filter: drop-shadow(0 0 0.4rem white);
      }

      &:active {
        filter: drop-shadow(0 0 0.6rem white);
      }
    }
  }

  > *:not(.information):not(.board) {
    transition: opacity $setup-animation ease;
  }

  &.board-side-animation {
    > *:not(.information):not(.board) {
      opacity: 0;
    }

    .board {
      transition-property: transform, opacity;
      transition-duration: $board-side-chosen-animation;
      transition-timing-function: ease-in-out;

      &:not(.chosen) {
        opacity: 0;
        z-index: -1;
      }
    }
  }

  .artemia .place-card:hover {
    transform: none;
  }
}

